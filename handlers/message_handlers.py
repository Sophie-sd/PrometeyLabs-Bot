"""
–û–±—Ä–æ–±–Ω–∏–∫–∏ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å –¥–ª—è PrometeyLabs Telegram Bot
"""
from telegram import Update, ReplyKeyboardMarkup, KeyboardButton
from telegram.ext import ContextTypes, MessageHandler, filters
import logging

logger = logging.getLogger(__name__)

async def handle_text_message(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """–û–±—Ä–æ–±–Ω–∏–∫ —Ç–µ–∫—Å—Ç–æ–≤–∏—Ö –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å"""
    user = update.effective_user
    message_text = update.message.text.lower()
    
    logger.info(f"–û—Ç—Ä–∏–º–∞–Ω–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –≤—ñ–¥ {user.id}: {message_text}")
    
    # –í–∏–∑–Ω–∞—á–∞—î–º–æ —á–∏ —Ü–µ Business —á–∞—Ç (–ø—Ä–∞–≤–∏–ª—å–Ω–æ –∑ effective_message)
    business_connection_id = getattr(update.effective_message, 'business_connection_id', None)
    
    # –ü—Ä–æ—Å—Ç–∏–π –∞–Ω–∞–ª—ñ–∑ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
    if any(word in message_text for word in ['–ø—Ä–∏–≤—ñ—Ç', '–≤—ñ—Ç–∞—é', 'hello', 'hi']):
        response = f"–ü—Ä–∏–≤—ñ—Ç, {user.first_name}! üëã –†–∞–¥–∏–π –≤–∞—Å –±–∞—á–∏—Ç–∏!"
    elif any(word in message_text for word in ['—è–∫ —Å–ø—Ä–∞–≤–∏', '—è–∫ –¥–µ–ª–∞', 'how are you']):
        response = "–î—è–∫—É—é, —É –º–µ–Ω–µ –≤—Å–µ –¥–æ–±—Ä–µ! üòä –ê —É –≤–∞—Å —è–∫ —Å–ø—Ä–∞–≤–∏?"
    elif any(word in message_text for word in ['–¥–æ–ø–æ–º–æ–≥–∞', 'help', '–ø—ñ–¥—Ç—Ä–∏–º–∫–∞']):
        response = "–ó–≤–∏—á–∞–π–Ω–æ! –ù–∞–ø–∏—à—ñ—Ç—å /help –¥–ª—è –æ—Ç—Ä–∏–º–∞–Ω–Ω—è —Å–ø–∏—Å–∫—É –¥–æ—Å—Ç—É–ø–Ω–∏—Ö –∫–æ–º–∞–Ω–¥."
    elif any(word in message_text for word in ['—Ü—ñ–Ω–∏', '–ø—Ä–∞–π—Å', 'prices', 'cost']):
        response = "–î–ª—è –æ—Ç—Ä–∏–º–∞–Ω–Ω—è —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—ó –ø—Ä–æ —Ü—ñ–Ω–∏ –Ω–∞—à–∏—Ö –ø–æ—Å–ª—É–≥, –±—É–¥—å –ª–∞—Å–∫–∞, –∑–≤–µ—Ä–Ω—ñ—Ç—å—Å—è –¥–æ –Ω–∞—Å:\nüìß info@prometeylabs.com"
    elif any(word in message_text for word in ['–ø—Ä–æ–µ–∫—Ç', 'project', '—Ä–æ–∑—Ä–æ–±–∫–∞', 'development']):
        response = "üíª –ú–∏ —Å–ø–µ—Ü—ñ–∞–ª—ñ–∑—É—î–º–æ—Å—è –Ω–∞ —Ä–æ–∑—Ä–æ–±—Ü—ñ –≤–µ–± —Ç–∞ –º–æ–±—ñ–ª—å–Ω–∏—Ö –¥–æ–¥–∞—Ç–∫—ñ–≤! –ù–∞–ø–∏—à—ñ—Ç—å /start –¥–ª—è –¥–µ—Ç–∞–ª—å–Ω–æ—ó —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—ó."
    elif any(word in message_text for word in ['—Å–∞–π—Ç', 'website', '–≤–µ–±-—Å–∞–π—Ç']):
        response = "üíª –ú–∏ —Å—Ç–≤–æ—Ä—é—î–º–æ —É–Ω—ñ–∫–∞–ª—å–Ω—ñ —Å–∞–π—Ç–∏ –ø—ñ–¥ –∫–ª—é—á –∑–∞ $300-700! –ù–∞–ø–∏—à—ñ—Ç—å /start –¥–ª—è –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è."
    elif any(word in message_text for word in ['—Ä–µ–∫–ª–∞–º–∞', 'ads', '–º–∞—Ä–∫–µ—Ç–∏–Ω–≥']):
        response = "üì¢ –ù–∞–ª–∞—à—Ç–æ–≤—É—î–º–æ —Ä–µ–∫–ª–∞–º—É –Ω–∞ Facebook, Google, TikTok! –ù–∞–ø–∏—à—ñ—Ç—å /start –¥–ª—è –¥–µ—Ç–∞–ª–µ–π."
    elif any(word in message_text for word in ['–≤—ñ–¥–µ–æ', 'video', 'ai']):
        response = "üé¨ –°—Ç–≤–æ—Ä—é—î–º–æ AI-–≤—ñ–¥–µ–æ –∑ –æ–∑–≤—É—á–µ–Ω–Ω—è–º! –ù–∞–ø–∏—à—ñ—Ç—å /start –¥–ª—è –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è."
    elif any(word in message_text for word in ['—Å–æ—Ü–º–µ—Ä–µ–∂—ñ', 'instagram', 'facebook']):
        response = "üì± –í–µ–¥–µ–º–æ —Å–æ—Ü—ñ–∞–ª—å–Ω—ñ –º–µ—Ä–µ–∂—ñ –∫–æ–º–ø–ª–µ–∫—Å–Ω–æ! –ù–∞–ø–∏—à—ñ—Ç—å /start –¥–ª—è –¥–µ—Ç–∞–ª–µ–π."
    elif any(word in message_text for word in ['–Ω–∞–≤—á–∞–Ω–Ω—è', '–∫—É—Ä—Å–∏', '—É—Ä–æ–∫–∏']):
        response = "üéì –ü—Ä–æ–≤–æ–¥–∏–º–æ –∫—É—Ä—Å–∏ –∑ IT, –º–∞—Ä–∫–µ—Ç–∏–Ω–≥—É —Ç–∞ AI! –ù–∞–ø–∏—à—ñ—Ç—å /start –¥–ª—è —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—ó."
    else:
        # –Ø–∫—â–æ —Ü–µ –ø–µ—Ä—à–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –≤—ñ–¥ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ - –ø–æ–∫–∞–∑—É—î–º–æ –º–µ–Ω—é
        response = f"–í—ñ—Ç–∞—é, {user.first_name}! üëã\n\n–õ–∞—Å–∫–∞–≤–æ –ø—Ä–æ—Å–∏–º–æ –¥–æ PrometeyLabs! –û–±–µ—Ä—ñ—Ç—å —â–æ –≤–∞—Å —Ü—ñ–∫–∞–≤–∏—Ç—å:"
        
        # –°—Ç–≤–æ—Ä—é—î–º–æ ReplyKeyboard –¥–ª—è Business
        keyboard = [
            [KeyboardButton("üõçÔ∏è –ü–æ—Å–ª—É–≥–∏"), KeyboardButton("‚ÑπÔ∏è –ü—Ä–æ –∫–æ–º–ø–∞–Ω—ñ—é")],
            [KeyboardButton("üìû –ü—ñ–¥—Ç—Ä–∏–º–∫–∞"), KeyboardButton("üíº –ú—ñ–π –∫–∞–±—ñ–Ω–µ—Ç")]
        ]
        reply_markup = ReplyKeyboardMarkup(
            keyboard, 
            one_time_keyboard=False, 
            resize_keyboard=True
        )
        
        await update.message.reply_text(
            response,
            reply_markup=reply_markup,
            business_connection_id=business_connection_id
        )
        return
    
    # –í—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ –≤—ñ–¥–ø–æ–≤—ñ–¥—å –∑ –ø—ñ–¥—Ç—Ä–∏–º–∫–æ—é Business
    await update.message.reply_text(
        response,
        business_connection_id=business_connection_id
    )
    logger.info(f"–í—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–æ –≤—ñ–¥–ø–æ–≤—ñ–¥—å –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—É {user.id}")

async def handle_photo_message(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """–û–±—Ä–æ–±–Ω–∏–∫ —Ñ–æ—Ç–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å"""
    user = update.effective_user
    
    response = f"–î—è–∫—É—é –∑–∞ —Ñ–æ—Ç–æ, {user.first_name}! üì∏\n\n–ù–∞ –∂–∞–ª—å, —è –ø–æ–∫–∏ —â–æ –Ω–µ –º–æ–∂—É –∞–Ω–∞–ª—ñ–∑—É–≤–∞—Ç–∏ –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è. –°–ø—Ä–æ–±—É–π—Ç–µ –Ω–∞–ø–∏—Å–∞—Ç–∏ —Ç–µ–∫—Å—Ç –∞–±–æ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞—Ç–∏ –∫–æ–º–∞–Ω–¥–∏."
    
    # –í–∏–∑–Ω–∞—á–∞—î–º–æ business_connection_id
    business_connection_id = getattr(update.effective_message, 'business_connection_id', None)
    
    await update.message.reply_text(
        response,
        business_connection_id=business_connection_id
    )
    logger.info(f"–û—Ç—Ä–∏–º–∞–Ω–æ —Ñ–æ—Ç–æ –≤—ñ–¥ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ {user.id} –∑ bcid={business_connection_id}")

async def handle_document_message(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """–û–±—Ä–æ–±–Ω–∏–∫ –¥–æ–∫—É–º–µ–Ω—Ç—ñ–≤"""
    user = update.effective_user
    document = update.message.document
    
    response = f"–î—è–∫—É—é –∑–∞ –¥–æ–∫—É–º–µ–Ω—Ç '{document.file_name}', {user.first_name}! üìÑ\n\n–ù–∞ –∂–∞–ª—å, —è –ø–æ–∫–∏ —â–æ –Ω–µ –º–æ–∂—É –æ–±—Ä–æ–±–ª—è—Ç–∏ –¥–æ–∫—É–º–µ–Ω—Ç–∏. –°–ø—Ä–æ–±—É–π—Ç–µ –Ω–∞–ø–∏—Å–∞—Ç–∏ —Ç–µ–∫—Å—Ç –∞–±–æ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞—Ç–∏ –∫–æ–º–∞–Ω–¥–∏."
    
    # –í–∏–∑–Ω–∞—á–∞—î–º–æ business_connection_id
    business_connection_id = getattr(update.effective_message, 'business_connection_id', None)
    
    await update.message.reply_text(
        response,
        business_connection_id=business_connection_id
    )
    logger.info(f"–û—Ç—Ä–∏–º–∞–Ω–æ –¥–æ–∫—É–º–µ–Ω—Ç –≤—ñ–¥ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ {user.id}: {document.file_name} –∑ bcid={business_connection_id}")

async def handle_voice_message(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """–û–±—Ä–æ–±–Ω–∏–∫ –≥–æ–ª–æ—Å–æ–≤–∏—Ö –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å"""
    user = update.effective_user
    
    response = f"–î—è–∫—É—é –∑–∞ –≥–æ–ª–æ—Å–æ–≤–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è, {user.first_name}! üé§\n\n–ù–∞ –∂–∞–ª—å, —è –ø–æ–∫–∏ —â–æ –Ω–µ –º–æ–∂—É —Ä–æ–∑–ø—ñ–∑–Ω–∞–≤–∞—Ç–∏ –º–æ–≤—É. –°–ø—Ä–æ–±—É–π—Ç–µ –Ω–∞–ø–∏—Å–∞—Ç–∏ —Ç–µ–∫—Å—Ç –∞–±–æ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞—Ç–∏ –∫–æ–º–∞–Ω–¥–∏."
    
    # –í–∏–∑–Ω–∞—á–∞—î–º–æ business_connection_id
    business_connection_id = getattr(update.effective_message, 'business_connection_id', None)
    
    await update.message.reply_text(
        response,
        business_connection_id=business_connection_id
    )
    logger.info(f"–û—Ç—Ä–∏–º–∞–Ω–æ –≥–æ–ª–æ—Å–æ–≤–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –≤—ñ–¥ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ {user.id} –∑ bcid={business_connection_id}")

def setup_message_handlers(application):
    """–ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –æ–±—Ä–æ–±–Ω–∏–∫—ñ–≤ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å"""
    # –û–±—Ä–æ–±–Ω–∏–∫–∏ —Ä—ñ–∑–Ω–∏—Ö —Ç–∏–ø—ñ–≤ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å
    application.add_handler(MessageHandler(
        filters.TEXT & ~filters.COMMAND,
        handle_text_message
    ))
    
    application.add_handler(MessageHandler(
        filters.PHOTO,
        handle_photo_message
    ))
    
    application.add_handler(MessageHandler(
        filters.Document.ALL,
        handle_document_message
    ))
    
    application.add_handler(MessageHandler(
        filters.VOICE,
        handle_voice_message
    ))
    
    logger.info("–û–±—Ä–æ–±–Ω–∏–∫–∏ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å –Ω–∞–ª–∞—à—Ç–æ–≤–∞–Ω—ñ")
